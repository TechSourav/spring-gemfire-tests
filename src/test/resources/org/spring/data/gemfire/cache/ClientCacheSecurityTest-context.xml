<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:gfe="http://www.springframework.org/schema/gemfire"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/gemfire http://www.springframework.org/schema/gemfire/spring-gemfire.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
">

  <bean class="org.spring.data.gemfire.config.DistributedSystemValidationBeanPostProcessor"/>

  <util:properties id="client.properties">
    <prop key="gemfire.client.server.host">localhost</prop>
    <prop key="gemfire.client.server.port">12480</prop>
    <prop key="gemfire.locator.host">localhost</prop>
    <prop key="gemfire.locator.port">11235</prop>
    <prop key="gemfire.log.level">config</prop>
    <prop key="gemfire.security.ssl.enabled">true</prop>
    <prop key="gemfire.security.ssl.require-authentication">true</prop>
    <prop key="gemfire.security.ssl.protocols">any</prop>
    <prop key="gemfire.security.ssl.ciphers">any</prop>
    <prop key="gemfire.security.ssl.keystore.location">/Users/jblum/pivdev/spring-data-gemfire-tests-workspace/spring-data-gemfire-tests/etc/gemfire/security/trusted.keystore</prop>
    <prop key="gemfire.security.ssl.keystore.password">s3cr3t</prop>
    <prop key="gemfire.security.ssl.keystore.type">jks</prop>
  </util:properties>

  <context:property-placeholder properties-ref="client.properties"/>

  <util:properties id="clusterSslGemfireProperties">
    <prop key="cluster-ssl-enabled">${gemfire.security.ssl.enabled}</prop>
    <prop key="cluster-ssl-require-authentication">${gemfire.security.ssl.require-authentication}</prop>
    <prop key="cluster-ssl-protocols">${gemfire.security.ssl.protocols}</prop>
    <prop key="cluster-ssl-ciphers">${gemfire.security.ssl.ciphers}</prop>
    <prop key="cluster-ssl-keystore">${gemfire.security.ssl.keystore.location}</prop>
    <prop key="cluster-ssl-keystore-password">${gemfire.security.ssl.keystore.password}</prop>
    <prop key="cluster-ssl-keystore-type">${gemfire.security.ssl.keystore.type}</prop>
    <prop key="cluster-ssl-truststore">${gemfire.security.ssl.keystore.location}</prop>
    <prop key="cluster-ssl-truststore-password">${gemfire.security.ssl.keystore.password}</prop>
    <prop key="log-level">${gemfire.log.level:config}</prop>
  </util:properties>

  <util:properties id="gemfireProperties">
    <prop key="log-level">${gemfire.log.level:config}</prop>
  </util:properties>

  <util:properties id="serverSslGemfireProperties">
    <prop key="log-level">${gemfire.log.level:config}</prop>
    <prop key="server-ssl-enabled">${gemfire.security.ssl.enabled}</prop>
    <prop key="server-ssl-require-authentication">${gemfire.security.ssl.require-authentication}</prop>
    <prop key="server-ssl-protocols">${gemfire.security.ssl.protocols}</prop>
    <prop key="server-ssl-ciphers">${gemfire.security.ssl.ciphers}</prop>
    <prop key="server-ssl-keystore">${gemfire.security.ssl.keystore.location}</prop>
    <prop key="server-ssl-keystore-password">${gemfire.security.ssl.keystore.password}</prop>
    <prop key="server-ssl-keystore-type">${gemfire.security.ssl.keystore.type}</prop>
    <prop key="server-ssl-truststore">${gemfire.security.ssl.keystore.location}</prop>
    <prop key="server-ssl-truststore-password">${gemfire.security.ssl.keystore.password}</prop>
  </util:properties>

  <util:properties id="sslGemfireProperties">
    <prop key="log-level">${gemfire.log.level:config}</prop>
    <prop key="security-client-auth-init">org.spring.data.gemfire.cache.ClientCacheSecurityTest$TestAuthInitialize.create</prop>
    <prop key="security-username">jblum</prop>
    <prop key="security-password">jblum</prop>
    <prop key="ssl-enabled">${gemfire.security.ssl.enabled}</prop>
    <prop key="ssl-ciphers">${gemfire.security.ssl.ciphers}</prop>
    <prop key="ssl-protocols">${gemfire.security.ssl.protocols}</prop>
    <prop key="ssl-require-authentication">${gemfire.security.ssl.require-authentication}</prop>
    <prop key="javax.net.ssl.keyStore">${gemfire.security.ssl.keystore.location}</prop>
    <prop key="javax.net.ssl.keyStorePassword">${gemfire.security.ssl.keystore.password}</prop>
    <prop key="javax.net.ssl.keyStoreType">${gemfire.security.ssl.keystore.type}</prop>
    <prop key="javax.net.ssl.trustStore">${gemfire.security.ssl.keystore.location}</prop>
    <prop key="javax.net.ssl.trustStorePassword">${gemfire.security.ssl.keystore.password}</prop>
  </util:properties>

  <gfe:client-cache properties-ref="sslGemfireProperties" pool-name="gemfireLocatorPool"/>

  <gfe:pool id="gemfireLocatorPool" max-connections="1" min-connections="1">
    <gfe:locator host="${gemfire.locator.host}" port="${gemfire.locator.port}"/>
<!--
    <gfe:server host="${gemfire.client.server.host}" port="${gemfire.client.server.port}"/>
-->
  </gfe:pool>

  <gfe:client-region id="Example" pool-name="gemfireLocatorPool" shortcut="PROXY"
    key-constraint="java.lang.Long" value-constraint="java.lang.Long"/>

</beans>
